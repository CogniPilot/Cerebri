# Copyright (c) 2023, CogniPilot Foundation
# SPDX-License-Identifier: Apache-2.0

menuconfig ACTUATE_PWM
  bool "PWM"
  default n  
  depends on PWM
  help
    This option enables pwm actuators

if ACTUATE_PWM

config ACTUATE_PWM_NUMBER
  int "Number of PWM actuators"
  default 1
  range 1 8
  help
    Defines number of PWM actuators 1-8

menu "PWM_0"

config ACTUATE_PWM_OUTPUT_0
  string "Aliased output device PWM 0"
  default "aux0"
  help
    Aliased name of PWM output device used for PWM 0

config ACTUATE_PWM_PULSE_US_MIN_0
  int "Min usec pulse width PWM 0"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 0

config ACTUATE_PWM_PULSE_US_MAX_0
  int "Max usec pulse width PWM 0"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 0

config ACTUATE_PWM_PULSE_US_CENTER_0
  int "Center of usec pulse width PWM 0"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 0
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_0
  bool "Use linear approximation PWM 0"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_0

menu "LINEAR_PWM_0"

config ACTUATE_PWM_USE_POS_0
  bool "Use actuator position PWM 0"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_0

config ACTUATE_PWM_LINEAR_M_DIV_0
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_0
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_0
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_0
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_0

endif #ACTUATE_PWM_LINEAR_0

config ACTUATE_PWM_INDEX_0
  int "actuator index for PWM 0"
  default 0
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_0

if ACTUATE_PWM_NUMBER > 1

menu "PWM_1"

config ACTUATE_PWM_OUTPUT_1
  string "Aliased output device PWM 1"
  default "aux1"
  help
    Aliased name of PWM output device used for PWM 1

config ACTUATE_PWM_PULSE_US_MIN_1
  int "Min usec pulse width PWM 1"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 1

config ACTUATE_PWM_PULSE_US_MAX_1
  int "Max usec pulse width PWM 1"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 1

config ACTUATE_PWM_PULSE_US_CENTER_1
  int "Center of usec pulse width PWM 1"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 1
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_1
  bool "Use linear approximation PWM 1"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_1

menu "LINEAR_PWM_1"

config ACTUATE_PWM_USE_POS_1
  bool "Use actuator position PWM 1"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_1

config ACTUATE_PWM_LINEAR_M_DIV_1
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_1
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_1
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_1
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_1

endif #ACTUATE_PWM_LINEAR_1

config ACTUATE_PWM_INDEX_1
  int "actuator index for PWM 1"
  default 1
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_1

endif #ACTUATE_PWM_NUMBER > 1

if ACTUATE_PWM_NUMBER > 2

menu "PWM_2"

config ACTUATE_PWM_OUTPUT_2
  string "Aliased output device PWM 2"
  default "aux2"
  help
    Aliased name of PWM output device used for PWM 2

config ACTUATE_PWM_PULSE_US_MIN_2
  int "Min usec pulse width PWM 2"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 2

config ACTUATE_PWM_PULSE_US_MAX_2
  int "Max usec pulse width PWM 2"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 2

config ACTUATE_PWM_PULSE_US_CENTER_2
  int "Center of usec pulse width PWM 2"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 2
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_2
  bool "Use linear approximation PWM 2"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_2

menu "LINEAR_PWM_2"

config ACTUATE_PWM_USE_POS_2
  bool "Use actuator position PWM 2"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_2

config ACTUATE_PWM_LINEAR_M_DIV_2
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_2
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_2
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_2
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_2

endif #ACTUATE_PWM_LINEAR_2

config ACTUATE_PWM_INDEX_2
  int "actuator index for PWM 2"
  default 2
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_2

endif #ACTUATE_PWM_NUMBER > 2

if ACTUATE_PWM_NUMBER > 3

menu "PWM_3"

config ACTUATE_PWM_OUTPUT_3
  string "Aliased output device PWM 3"
  default "aux3"
  help
    Aliased name of PWM output device used for PWM 3

config ACTUATE_PWM_PULSE_US_MIN_3
  int "Min usec pulse width PWM 3"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 3

config ACTUATE_PWM_PULSE_US_MAX_3
  int "Max usec pulse width PWM 3"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 3

config ACTUATE_PWM_PULSE_US_CENTER_3
  int "Center of usec pulse width PWM 3"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 3
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_3
  bool "Use linear approximation PWM 3"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_3

menu "LINEAR_PWM_3"

config ACTUATE_PWM_USE_POS_3
  bool "Use actuator position PWM 3"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_3

config ACTUATE_PWM_LINEAR_M_DIV_3
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_3
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_3
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_3
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_3

endif #ACTUATE_PWM_LINEAR_3

config ACTUATE_PWM_INDEX_3
  int "actuator index for PWM 3"
  default 3
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_3

endif #ACTUATE_PWM_NUMBER > 3

if ACTUATE_PWM_NUMBER > 4

menu "PWM_4"

config ACTUATE_PWM_OUTPUT_4
  string "Aliased output device PWM 4"
  default "aux4"
  help
    Aliased name of PWM output device used for PWM 4

config ACTUATE_PWM_PULSE_US_MIN_4
  int "Min usec pulse width PWM 4"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 4

config ACTUATE_PWM_PULSE_US_MAX_4
  int "Max usec pulse width PWM 4"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 4

config ACTUATE_PWM_PULSE_US_CENTER_4
  int "Center of usec pulse width PWM 4"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 4
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_4
  bool "Use linear approximation PWM 4"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_4

menu "LINEAR_PWM_4"

config ACTUATE_PWM_USE_POS_4
  bool "Use actuator position PWM 4"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_4

config ACTUATE_PWM_LINEAR_M_DIV_4
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_4
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_4
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_4
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_4

endif #ACTUATE_PWM_LINEAR_4

config ACTUATE_PWM_INDEX_4
  int "actuator index for PWM 4"
  default 4
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_4

endif #ACTUATE_PWM_NUMBER > 4

if ACTUATE_PWM_NUMBER > 5

menu "PWM_5"

config ACTUATE_PWM_OUTPUT_5
  string "Aliased output device PWM 5"
  default "aux5"
  help
    Aliased name of PWM output device used for PWM 5

config ACTUATE_PWM_PULSE_US_MIN_5
  int "Min usec pulse width PWM 5"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 5

config ACTUATE_PWM_PULSE_US_MAX_5
  int "Max usec pulse width PWM 5"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 5

config ACTUATE_PWM_PULSE_US_CENTER_5
  int "Center of usec pulse width PWM 5"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 5
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_5
  bool "Use linear approximation PWM 5"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_5

menu "LINEAR_PWM_5"

config ACTUATE_PWM_USE_POS_5
  bool "Use actuator position PWM 5"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_5

config ACTUATE_PWM_LINEAR_M_DIV_5
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_5
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_5
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_5
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_5

endif #ACTUATE_PWM_LINEAR_5

config ACTUATE_PWM_INDEX_5
  int "actuator index for PWM 5"
  default 5
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_5

endif #ACTUATE_PWM_NUMBER > 5

if ACTUATE_PWM_NUMBER > 6

menu "PWM_6"

config ACTUATE_PWM_OUTPUT_6
  string "Aliased output device PWM 6"
  default "aux6"
  help
    Aliased name of PWM output device used for PWM 6

config ACTUATE_PWM_PULSE_US_MIN_6
  int "Min usec pulse width PWM 6"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 6

config ACTUATE_PWM_PULSE_US_MAX_6
  int "Max usec pulse width PWM 6"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 6

config ACTUATE_PWM_PULSE_US_CENTER_6
  int "Center of usec pulse width PWM 6"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 6
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_6
  bool "Use linear approximation PWM 6"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_6

menu "LINEAR_PWM_6"

config ACTUATE_PWM_USE_POS_6
  bool "Use actuator position PWM 6"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_6

config ACTUATE_PWM_LINEAR_M_DIV_6
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_6
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_6
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_6
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_6

endif #ACTUATE_PWM_LINEAR_6

config ACTUATE_PWM_INDEX_6
  int "actuator index for PWM 6"
  default 6
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_6

endif #ACTUATE_PWM_NUMBER > 6

if ACTUATE_PWM_NUMBER > 7

menu "PWM_7"

config ACTUATE_PWM_OUTPUT_7
  string "Aliased output device PWM 7"
  default "aux7"
  help
    Aliased name of PWM output device used for PWM 7

config ACTUATE_PWM_PULSE_US_MIN_7
  int "Min usec pulse width PWM 7"
  default 1100
  range 0 4999
  help
    Minimum allowed pulse width in micro seconds for PWM 7

config ACTUATE_PWM_PULSE_US_MAX_7
  int "Max usec pulse width PWM 7"
  default 1900
  range 1 5000
  help
    Maximum allowed pulse width in micro seconds for PWM 7

config ACTUATE_PWM_PULSE_US_CENTER_7
  int "Center of usec pulse width PWM 7"
  default 1500
  range 2 4998
  help
    Center of pulse width in micro seconds for PWM 7
    This is the value it also uses on startup before
    getting message signals or arming.

config ACTUATE_PWM_LINEAR_7
  bool "Use linear approximation PWM 7"
  default n
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro seconds with a linear approximation using slope
    intercept formula to best fit your actuator.

if ACTUATE_PWM_LINEAR_7

menu "LINEAR_PWM_7"

config ACTUATE_PWM_USE_POS_7
  bool "Use actuator position PWM 7"
  default n
  help
    Use actuator message position instead of velocity for
    ACTUATE_PWM_INDEX_7

config ACTUATE_PWM_LINEAR_M_DIV_7
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_M_7
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config ACTUATE_PWM_LINEAR_C_DIV_7
  int "divisor to divide linear intercept C"
  default 1000
  help
    The divisor value to divide intercept constant C of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config ACTUATE_PWM_LINEAR_C_7
  int "linear intercept C (divisor scaled)"
  default 1500000
  help
    The intercept constant C value of the linearized PWM/[vel or pos]
    divided by the divisor ACTUATE_PWM_LINEAR_C_DIV (default 1000)

endmenu #LINEAR_PWM_7

endif #ACTUATE_PWM_LINEAR_7

config ACTUATE_PWM_INDEX_7
  int "actuator index for PWM 7"
  default 7
  help
    The actuator message index to use for position,
    velocity or nomalized fields

endmenu #PWM_7

endif #ACTUATE_PWM_NUMBER > 7

module = ACTUATE_PWM
module-str = actuate_pwm
source "subsys/logging/Kconfig.template.log_config"

endif #ACTUATE_PWM
